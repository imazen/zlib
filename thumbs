#!/bin/bash

# THe Universal Make Bash Script
# Used to wrap build scripts for easy dep
# handling and multiplatform support


# Basic usage on *nix:
# export tbs_platform=x86
# ./thumbs make

# On Win (msvc):
# C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\vcvarsall x86_amd64
# C:\path\to\bash -c "export tbs_tools=msvc12; ./thumbs make"

# On Win (mingw32):
# SET path=C:\mingw32\bin;%path%
# C:\path\to\bash -c "export tbs_tools=mingw; export tbs_platform=x86; ./thumbs make"


# Global settings are stored in env vars
# Should be inherited

[ $tbs_platform ]       || export tbs_platform=x64
[ $tbs_tools ]          || export tbs_tools=gnu
[ $tbs_static_runtime ] || export tbs_static_runtime=0

# -----------

if [ $# -lt 1 ]
then
  echo ""
  echo " Usage : ./thumbs [command]"
  echo ""
  echo " Commands:"
  echo "   make    - builds everything"
  echo "   check   - runs any tests"
  echo "   clean   - removes build files"
  echo "   list    - echoes paths to any interesting files"
  echo "             space separated; relative"
  exit
fi

# Local settings

list="./zlib.h ./zutil.h ./build/zconf.h"
make=
cm_tools=
cm_args=()

# -----------

case "$tbs_tools" in
msvc12)
  cm_tools="Visual Studio 12"
  make="msbuild.exe zlib.sln //p:Configuration=Release //v:m"
  list="./build/Release/zlib.dll ./build/Release/zlib.lib ./build/Release/zlib_static.lib $list" ;;
gnu)
  cm_tools="Unix Makefiles"
  cm_args+=(-fPIC)
  make=make
  list="./build/libz.so.1.2.7.3 ./build/libz.a $list" ;;
mingw)
  cm_tools="MinGW Makefiles"
  make=mingw32-make
  list="./build/libz.dll ./build/libz.dll.a ./build/libz.a $list" ;;
esac

# -----------

case "$tbs_platform" in
x64)
  [ $tbs_tools = msvc12 ] && cm_tools="$cm_tools Win64"
  [ $tbs_tools = gnu -o $tbs_tools = mingw ] && cm_args+=(-DCMAKE_C_FLAGS=-m64) ;;
x86)
  [ $tbs_tools = gnu -o $tbs_tools = mingw ] && cm_args+=(-DCMAKE_C_FLAGS=-m32) ;;
esac

# -----------

if [ $tbs_static_runtime -gt 0 ]
then
  [ $tbs_tools = msvc12 ] && cm_args+=(-DCMAKE_C_FLAGS_RELEASE=/MT)
  [ $tbs_tools = gnu -o $tbs_tools = mingw ] && cm_args+=(-DCMAKE_SHARED_LINKER_FLAGS=-static-libgcc)
fi

# -----------

case "$1" in
make)
  mkdir build
  cd build
  cmake -G "$cm_tools" "${cm_args[@]}" .. || exit 1
  $make || exit 1
  cd .. ;;
  
check)
  cd build
  ctest . || exit 1
  cd .. ;;
  
clean)
  rm -rf build ;;

list)
  echo $list ;;
esac
